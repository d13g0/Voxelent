-------------------------------------------------------------------------------------------
VERSION 0.89.1 - Network ops + Camera bug fixes
-------------------------------------------------------------------------------------------

document_plexo.py has been renamed to document.py now all the subprojects get documented at the same 
time so we don't miss anything.

New classes in Plexo
----------------------
vxlDataStreamReader : encapsulates a data source
   |
   + -- vxlJSONReader: reads a JSON data source
   


-------------------------------------------------------------------------------------------
VERSION 0.89 - Crocodile Rock - Elton John
-------------------------------------------------------------------------------------------
API Updates
------------------
1. New API methods getActor, getActorByUID, getProgram
2. Actors and models names are stripped from the '.json' suffix.

Model Updates
------------------
1.New model method getBoundingBoxVertices
2.New model static method BB_INDICES


Actor Updates
--------------
1. New visualization mode for actors (BOUNDING BOX). Check vxl.def.actor.mode
   Phong and Lambert strategies updated to be able to render actor bounding boxes

2. New actor method getHeight (it behaves nicely after actor rotation/scaling always returning y-length of bounding box)

3. Actors hold now an internal matrix to represent geometric transformations (i.e. rotation, translations, scaling)
   Position, Scale and Rotation should be updated by the provided methods.
   
4. setPosition, setScale have been updated to use the internal matrix representation 

5. the methods translate and rotate, rotateX, rotateY, rotateZ have been implemented

6. the method vxlActor._computeBoundingBox is called after geometric transformation operations

7. vxlScene will not invoke vxlActor._computeBoundingBox when the bounding box of the scene wants to be established.
In other words, each actor is responsible to keep its bounding box up to date

8. new method vxlActor.getBoundingBoxVertices, vxlActor.getBoundingBox

9. Some actor properties are made private ('_' prefix)

Camera Updates
---------------------
1. Tracking cameras reviewed and implemented

2. Camera to follow actor:

var camera = vxl.c.camera;
camera.setType(vxl.def.camera.type.TRACKING);
camera.follow(actor)

The camera needs to be positioned first. You can do:

camera.closeUp(actor)

then

camera.follow(actor)
Any actor translation will be applied to the camera 
Also, the camera has tracking modes (see the docs on vxl.def.camera.tracking)
 
3. New methods: roll, translate, closeUp, follow, unfollow

4. the shot method is made private (_shot). 

5. The camera variables are made private ('_' prefix)

vxlTrackerInteractor updates
------------------------------
1. Remember double click evokes current camera longShot method
2. Ctrl+Mouse is ZOOM
3. Shift + Ctrl + Mouse is ROLL

-------------------------------------------------------------------------------------------
VERSION 0.88 - Casablanca premiers in NYC
-------------------------------------------------------------------------------------------
1. Texture mapping has been implemented

2. The vxlActor and vxlModel classes have been updated to handle textures

3. There is a new class: vxlTexture to handle the texture loading and selecting the texture filters

4. The obj2json.py has been updated to handle textures

5. The texture file (png, jpg image) should have dimensions (width, height) that are power of 2 and
it should be in the same directory as the json file. 

6. Fullscreen implemented. Click on the view so it acquires the focus then 
press f (fullscreen) or x (exit fullscreen)

-------------------------------------------------------------------------------------------
VERSION 0.87.6 - Spilberg's JAWS
-------------------------------------------------------------------------------------------
1. Lookup tables are loaded BY DEMAND instead of loading them all when Voxelent loads.
See vxl.api.loadLUTS 

2. Main folder structure has been simplified:
demos - docs - downloads - tools - source 

3. There is a new folder where I will put all the importers that I am working on: tools - importers

4. Default folders (vxl.def.lut.folder and vxl.def.model.folder) have been eliminated.
The developer needs to specify where relatively to voxelent.js location the assets are.
This applies for lookup tables and models. 

There is a new parameter to set the path for a list of models to load. Check the documentation for
vxl.api.load


5. try catch block added to JQuery detection (VXL.js)

6. The method vxl.api.subscribe has been added to the public API. 
Kamyar: please how to use this in your tutorial

7. Added support to render LINES! Check the cool DTI model in the VTK tutorial.

8. Camera API simplified

9. Dollying / Panning working nicely

10. Gimbal lock fixed using quaternions. Thanks tojiro!!

11. New Blender Program! now we can render blender objects (obj files + mtl files) --> JSON

12. Added idea of rendering strategies to decouple the interaction between scenes and programs.
We need to create a tutorial about this! It's reall cool!

13. getProperty and setProperty methods implemented in vxlActor. The scope determines what copy to pass
(model or actor property). We need to write a tutorial about this too.

14. New demo testing the actor cloning mechanism (see demo-lookup-table.html)

15. Publish/Subscribe mechanism updated for vxlNotifier

16. vxlBakeStrategy and vxlBakeProgram added. Working on improving rendering performance by interleaving buffers

17. Calculation of the bounding box is done BY DEMAND for performance reasons.

18. API docs have been improved
-------------------------------------------------------------------------------------------
VERSION 0.87.5 - Mother's Day
-------------------------------------------------------------------------------------------
1. The method setAutomaticResize(bool) is added to view. It will only work if the canvas is inside a div?

2. Each renderer calls the scene.render method and passes itself as an argument. In the last tests there are not collisions (nor flickering). 
We expected some issues here because we are multithreading the access to the GPU (using JavaScript intervals one per renderer)... Hmmm
let's see what the browsers vendors can do.

3. In the process of updating demos [not done yet] When done we will have the 0.88 version and then they will be available again in the website

4. Multi-view demo was added.

5. Voxelent uses now glMatrix! yay! Thank you Brandon.

6. The python packager generates the unminified and the minified voxelent lib.


-------------------------------------------------------------------------------------------
VERSION 0.87 - Kitware Visit
-------------------------------------------------------------------------------------------
1. The folder tutorials was renamed to demos
2. The demos were renamed to eliminate the word 'demo' from the filename
3. The demo hello.html and sphere.html were modified:
* hello.html adds one line to set up the camera to a reasonable distance
* sphere.html shows how the JS window object can listen for Voxelent events

4. python tools were renamed using the underscore instead of the dash. For instance:
vxl-documenter.py was renamed to vxl_documenter.py. The goal is to allow calling
modules from other python modules (not possible with a dash in the name of the module).

The new python module vxl_pack_and_document.py was created

5. The demos: picking, multiview and bouncing balls need to be updated with the latest 
voxelent version. They have OLD CODE.


-------------------------------------------------------------------------------------------
VERSION 0.86 - Family Day
-------------------------------------------------------------------------------------------
1. All the references to vxlAsseManager have been replaced by vxlModelManager. The goal of 
this change is to unify the ontology (Asset, Model).

2. vxl.def.asset has been merged into vxl.def.model

3. The method vxl.api.loadAssets has been changed to vxl.api.load

4. The uniform 'uUseLightTranslation' is set to true by default in the phong and diffuse shaders

5. vxlActor.setMode changed to vxlActor.setVisualizationMode

6. Tools are renamed from vox- to vxl- for naming consistency

7. vxlCameraInteractor disappears. vxlViewListener and vxlCameraInteractor are integrated into
vxlViewInteractor.

8. The folder view is created in the source code. It groups vxlView, vxlViewInteractor and the
interactors folder

9. The interactors now descend from vxlViewInteractor

10. vxlTrackballCameraInteractor is now known as vxlTrackerInteractor

11. vxlView has now the method setInteractor(i:vxlViewInteractor):void

12. Now the models and the actor names do not carry the suffix .json

13. vxlActor.setPosition and vxlActor.setScale are created

14. FOV, Z_NEAR and Z_FAR are now vxlCamera properties

-------------------------------------------------------------------------------------------
VERSION 0.85 - Diego's Birthday
-------------------------------------------------------------------------------------------
1. Ambient Lights were removed from vxlView and vxl.api
This is an attribute that is dependent from the selected GLSL program and it should not be here.

2. The method vxlActor.clone was created. YAY!

3. The auxiliary Scene objects (vxlAxis, vxlBoundingBox, vxlFloor) were removed from the
actor list inside vxlScene so they do not interfere with actor counting and actor operations

4. The auxiliary Scene objects were encapsulated in a new class: vxlSceneToys

5. The vxlActor.setColor method was removed. Again, this is GLSL program dependent.
The more generic approach vxlActor.setProperty was created instead

6. The method vxlScene.setColor was removed with no replacement

7.vxlProgram was updated. The syntax to enable/disable attributes and to refer to attribute
pointers is simpler. Also the methods to register/load/use programs were updated.

8. vxl.api was updated. The name of methods that referred to Current Objects (vxl.c) was updated. 
For instance, instead of having vxl.api.getActiveCamera, now we have vxl.api.getCurrentCamera.
This improves consistency in the ontology of the API.

9. The documentation of the namespaces vxl, vxl.go, vxl.c, vxl.def and vxl.api was improved

10. Actors can now be translated and scaled

12. The code for vxlCamera was updated. The commented code that was not being used was removed

13. The folder structure of the library was updated to include: API docs, tutorials, and minified versions.

14. Actors can have different rendering programs

-------------------------------------------------------------------------------------------
VERSION 0.84 - The beatles arrive into JFK
-------------------------------------------------------------------------------------------
1. First version to offer in the website
2. Support for multiple views accessing the same scene was included
3. DS_Store (Mac metafiles) were removed from source control
