function vxlProgram(a){this._gl=a;this._codebase={};this._webGLProgram={};this._attributeList={};this._uniformList={};this._uniformType={};this._uniform_cache={};this._currentWebGLProgram=null;this._currentProgramID="";this._currentUniformLocation={}}vxlProgram.prototype.register=function(b,a){vxl.go.console("Registering program "+b);this._codebase[b]=a};vxlProgram.prototype.isRegistered=function(a){return(this._codebase[a]!=undefined)};vxlProgram.prototype._createShader=function(a,c){var d=this._gl;
var b=null;if(a==vxl.def.glsl.VERTEX_SHADER){b=d.createShader(d.VERTEX_SHADER)}else{if(a==vxl.def.glsl.FRAGMENT_SHADER){b=d.createShader(d.FRAGMENT_SHADER)}}if(c==undefined||c==null){alert("Error getting the code for shader of type "+a)}d.shaderSource(b,c);d.compileShader(b);if(!d.getShaderParameter(b,d.COMPILE_STATUS)){alert(d.getShaderInfoLog(b))}return b};vxlProgram.prototype.loadProgram=function(f){var b=this._codebase[f];var d=this._gl;var c=d.createProgram();if(b.VERTEX_SHADER){var e=this._createShader(vxl.def.glsl.VERTEX_SHADER,b.VERTEX_SHADER);
d.attachShader(c,e)}if(b.FRAGMENT_SHADER){var a=this._createShader(vxl.def.glsl.FRAGMENT_SHADER,b.FRAGMENT_SHADER);d.attachShader(c,a)}d.linkProgram(c);if(!d.getProgramParameter(c,d.LINK_STATUS)){alert("Program: Could not link the shading program")}else{vxl.go.console("Program: the program "+f+" has been loaded")}this._webGLProgram[f]=c};vxlProgram.prototype.isLoaded=function(a){return(this._webGLProgram[a]!=undefined)};vxlProgram.prototype._parseUniforms=function(d){vs=this._codebase[this._currentProgramID].VERTEX_SHADER;
fs=this._codebase[this._currentProgramID].FRAGMENT_SHADER;uNames=this._codebase[this._currentProgramID].UNIFORMS;uTypes={};for(var a=0;a<uNames.length;a++){var b=uNames[a];var c=new RegExp("uniform.*"+b,"g");if(vs.search(c)!=-1){uTypes[b]=vs.substring(vs.search(c),vs.length).substring(0,vs.indexOf(";")).split(" ")[1]}else{if(fs.search(c)!=1){uTypes[b]=fs.substring(fs.search(c),fs.length).substring(0,fs.indexOf(";")).split(" ")[1]}else{alert("Program: In the program "+this._currentProgramID+" the uniform "+b+" is listed but not used")
}}}this._uniformList[this._currentProgramID]=uNames;this._uniformType[this._currentProgramID]=uTypes};vxlProgram.prototype.useProgram=function(c){var b=this._gl;var a=this._webGLProgram[c];if(c in this._webGLProgram){b.linkProgram(a);b.useProgram(a);this._currentWebGLProgram=a;this._currentProgramID=c;this._parseUniforms();vxl.go.console("Program: the program "+c+" has been linked and is the current program")}else{alert("Program: the program "+c+" has NOT been loaded")}};vxlProgram.prototype.loadDefaults=function(){var b=this._codebase[this._currentProgramID];
if("DEFAULTS" in b){vxl.go.console("Program: defaults for program "+this._currentProgramID+" found. Loading..");var c=b.DEFAULTS;for(var a in c){this.setUniform(a,c[a]);vxl.go.console("Program: Uniform:"+a+", Default Value:"+c[a])}}else{vxl.go.console("Program: WARNING: defaults for program "+this._currentProgramID+" NOT found")}};vxlProgram.prototype.setUniforms=function(a){for(uni in a){this.setUniform(uni,a[uni])}};vxlProgram.prototype.setUniform=function(e,d,f){var b=this._currentWebGLProgram;
var c=this._uniformList[this._currentProgramID];var a=this._currentUniformLocation;var g=this._uniform_cache;if(c.hasObject(e)){a[e]=this._gl.getUniformLocation(b,e)}else{alert("Program: the uniform "+e+" is not defined for the program "+this._currentProgramID);return}g[e]=d;this._setPolymorphicUniform(e,a[e],d,f)};vxlProgram.prototype.getUniform=function(a){return this._uniform_cache[a]};vxlProgram.prototype._getAttributeLocation=function(a){if(!(a in this._attributeList)){this._attributeList[a]=this._gl.getAttribLocation(this._currentWebGLProgram,a)
}return this._attributeList[a]};vxlProgram.prototype._setPolymorphicUniform=function(d,b,c,f){var e=this._gl;var a=this._uniformType[this._currentProgramID][d];if(a=="bool"){e.uniform1i(b,c);return}else{if(a=="float"){e.uniform1f(b,c);return}else{if(a=="int"){e.uniform1i(b,c);return}else{if(a=="mat4"){if(!(c instanceof vxlMatrix4x4)){vxl.go.console("Program: the uniform "+d+" is defined as mat4 in GLSL. However the JS variable is not.")}e.uniformMatrix4fv(b,false,c.getAsFloat32Array());return}else{if(c instanceof Array){if(f=="int"){switch(c.length){case 1:e.uniform1iv(b,c);
break;case 2:e.uniform2iv(b,c);break;case 3:e.uniform3iv(b,c);break;case 4:e.uniform4iv(b,c);break;default:alert("ERROR")}}else{switch(c.length){case 1:e.uniform1fv(b,c);break;case 2:e.uniform2fv(b,c);break;case 3:e.uniform3fv(b,c);break;case 4:e.uniform4fv(b,c);break;default:alert("ERROR")}}}else{alert("Program: ERROR. The uniform  "+d+" could not be mapped")}}}}}};vxlProgram.prototype.setVertexAttribPointer=function(d,b,f,e,g,h){var c=this._getAttributeLocation(d);this._gl.vertexAttribPointer(c,b,f,e,g,h)
};vxlProgram.prototype.enableVertexAttribArray=function(c){var b=this._getAttributeLocation(c);this._gl.enableVertexAttribArray(b)};vxlProgram.prototype.disableVertexAttribArray=function(c){var b=this._getAttributeLocation(c);this._gl.disableVertexAttribArray(b)};vxlProgram.prototype.setMatrixUniform=function(c,a){var b=this._gl.getUniformLocation(this._currentWebGLProgram,c);this._gl.uniformMatrix4fv(b,false,a.getAsFloat32Array())};